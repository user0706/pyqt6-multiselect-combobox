name: Tests and Coverage

on:
  push:
    branches: [ "**" ]
  pull_request:

jobs:
  test:
    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      QT_QPA_PLATFORM: offscreen
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.11", "3.12", "3.13"]

    permissions:
      contents: read
      id-token: write  # required for Codecov v4 tokenless uploads on public repos

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install Qt/OpenGL runtime libraries (Linux)
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            libegl1 \
            libopengl0 \
            libgl1 \
            libxkbcommon-x11-0 \
            libxcb-icccm4 \
            libxcb-image0 \
            libxcb-keysyms1 \
            libxcb-render-util0 \
            libxcb-xinerama0 \
            libxcb-randr0 \
            libxcb-shape0 \
            libxcb-xfixes0 \
            libdbus-1-3 \
            libglib2.0-0

      - name: Install dependencies
        run: |
          pip install -e .
          pip install pytest pytest-cov PyQt6 pytest-qt

      - name: Run tests with coverage (Linux, headless via Xvfb)
        if: ${{ runner.os == 'Linux' }}
        run: |
          xvfb-run -a pytest \
            --maxfail=1 \
            --disable-warnings \
            --cov=pyqt6_multiselect_combobox \
            --cov-report=term-missing \
            --cov-report=xml

      - name: Run tests with coverage (macOS/Windows)
        if: ${{ runner.os != 'Linux' }}
        run: pytest --maxfail=1 --disable-warnings --cov=pyqt6_multiselect_combobox --cov-report=term-missing --cov-report=xml

      - name: Upload coverage.xml artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml-${{ matrix.os }}-${{ matrix.python-version }}
          path: coverage.xml

      - name: Upload coverage to Codecov (Linux, Python 3.12)
        if: ${{ github.event_name != 'pull_request' && runner.os == 'Linux' && matrix.python-version == '3.12' }}
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
          fail_ci_if_error: false
          verbose: true

      - name: Append summary
        if: always()
        run: |
          echo "### PyTest on ${{ runner.os }} with Python ${{ matrix.python-version }}" >> "$GITHUB_STEP_SUMMARY"
          echo "- Coverage XML: coverage.xml" >> "$GITHUB_STEP_SUMMARY"
